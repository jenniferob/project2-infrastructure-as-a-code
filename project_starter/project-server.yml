Parameters:
  EnvironmentName:
      Description: An environment name that will be prefixed to resource names
      Type: String

  VpcCIDR: 
      Description: Please enter the IP range (CIDR notation) for this VPC
      Type: String
      Default: 10.0.0.0/16
  
  PublicSubnet1CIDR:
      Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
      Type: String
      Default: 10.0.0.0/24

  PublicSubnet2CIDR:
      Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
      Type: String
      Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
      Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
      Type: String
      Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
      Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
      Type: String
      Default: 10.0.3.0/24

Resources:

    LBSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to our load balancer
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
    
    WebServerSecGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: Allow http to our hosts and SSH from local only
        VpcId:
          Fn::ImportValue:
            !Sub "${EnvironmentName}-VPCID"
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

    # An instance profile for the IAM role
    ServerInstanceProfile: 
        Type: AWS::IAM::InstanceProfile
        Properties: 
          Path: /
          Roles: 
            - !Ref UdacityS3ReadOnlyEC2
            
    WebAppGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-SNT1"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PRIV-SNT2"
        LaunchConfigurationName:
          Ref: WebAppLaunchConfig
        MinSize: '4'
        MaxSize: '6'
        TargetGroupARNs:
        - Ref: WebAppTargetGroup
    
    WebAppLB:
      Type: AWS::ElasticLoadBalancingV2::LoadBalancer
      Properties:
        Subnets:
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SNT1"
        - Fn::ImportValue: !Sub "${EnvironmentName}-PUB-SNT2"
        SecurityGroups:
        - Ref: LBSecGroup
    
    Listener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        DefaultActions:
        - Type: forward
          TargetGroupArn:
            Ref: WebAppTargetGroup
        LoadBalancerArn:
          Ref: WebAppLB
        Port: '80'
        Protocol: HTTP
    
    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
          Actions:
          - Type: forward
            TargetGroupArn: !Ref 'WebAppTargetGroup'
          Conditions:
          - Field: path-pattern
            Values: [/]
          ListenerArn: !Ref 'Listener'
          Priority: 1
    
    WebAppTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        HealthCheckIntervalSeconds: 30
        HealthCheckPath: /
        HealthCheckProtocol: HTTP
        HealthCheckTimeoutSeconds: 8
        HealthyThresholdCount: 2
        Port: 80
        Protocol: HTTP
        UnhealthyThresholdCount: 5
        VpcId: 
          Fn::ImportValue:
            Fn::Sub: "${EnvironmentName}-VPCID"

    WebAppLaunchConfig:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt-get update -y
            apt-get install apache2 -y
            systemctl start apache2.service
            cd /var/www/html
            echo "It works! Udagram, Udacity" > index.html
        ImageId: ami-005de95e8ff495156
        #KeyName: ''
        SecurityGroups:
        - Ref: WebServerSecGroup
        InstanceType: t3.micro 
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'

    # IAM role created to access the S3 Bucket
    UdacityS3ReadOnlyEC2:
        Type: "AWS::IAM::Role"
        Properties: 
            AssumeRolePolicyDocument: 
              Version: "2012-10-17"
              Statement: 
                - 
                  Effect: "Allow"
                  Principal: 
                    Service: 
                      - "ec2.amazonaws.com"
                  Action: 
                    - "sts:AssumeRole"
            ManagedPolicyArns:
                - arn:aws:iam::aws:policy/AmazonS3FullAccess
Outputs:
  # output for the load balancer
    LoadBalancer:
      Description: A reference to the Application Load Balancer
      Value: !Ref WebAppLB
  # output for the load balancer public URL
    LoadBalancerUrl:
      Description: The URL of the ALB
      Value: !Join [ "", [ "http://", !GetAtt WebAppLB.DNSName ] ]